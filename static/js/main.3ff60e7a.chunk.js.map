{"version":3,"sources":["pages/QuestionCategory.js","components/ShowResult.js","img/loader.svg","pages/Questions.js","App.js","reportWebVitals.js","index.js"],"names":["QuestionCategory","history","useState","cats","setCats","cat","setCat","difficulty","setDifficulty","qNo","setQNo","fetchQuestionCategories","a","axios","get","data","trivia_categories","useEffect","Card","style","marginTop","className","CardHeader","title","titleTypographyProps","variant","textAlign","backgroundColor","color","CardContent","TextField","select","label","defaultValue","onChange","e","target","value","helperText","map","c","MenuItem","id","name","type","Button","fontSize","onClick","parseInt","alert","url","push","ShowResult","questions","createMarkup","reset","score","setScore","length","filter","q","userAnswer","correct_answer","fontWeight","i","dangerouslySetInnerHTML","question","float","marginBottom","width","Questions","match","loading","setLoading","selected","setSelected","setQuestions","curQuestionNo","setCurQuestionNo","allAnswers","setAllAnswers","result","setResult","text","__html","fetchQuizData","params","no","dif","toLowerCase","results","incorrect_answers","sort","Math","random","console","log","src","Loader","alt","ans","getAnswer","App","Container","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"8RA6GeA,EAlGU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC1B,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsBF,mBAAS,IAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAAoCJ,mBAAS,IAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAsBN,mBAAS,GAA/B,mBAAOO,EAAP,KAAYC,EAAZ,KAEMC,EAAuB,uCAAG,8BAAAC,EAAA,sEACPC,IAAMC,IAAN,wCADO,gBACtBC,EADsB,EACtBA,KAERX,EAAQW,EAAKC,mBAHiB,2CAAH,qDAK7BC,qBAAU,WACRN,MACC,IAgBH,OACE,8BACE,eAACO,EAAA,EAAD,CAAMC,MAAO,CAAEC,UAAW,QAAUC,UAAU,OAA9C,UACE,cAACC,EAAA,EAAD,CACEC,MAAM,4BACNC,qBAAsB,CAAEC,QAAS,MACjCN,MAAO,CACLO,UAAW,SACXC,gBAAiB,QACjBC,MAAO,UAGX,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,QAAM,EACNC,MAAM,SACNC,aAAa,GACbC,SAAU,SAACC,GAAD,OAAO7B,EAAO6B,EAAEC,OAAOC,QACjCC,WAAW,yBACXjB,UAAU,YACVI,QAAQ,WAPV,SASGtB,EAAKoC,KAAI,SAACC,GACT,OACE,cAACC,EAAA,EAAD,CAAqBJ,MAAOG,EAAEE,GAA9B,SACGF,EAAEG,MADUH,EAAEE,SAOvB,eAACZ,EAAA,EAAD,CACEC,QAAM,EACNC,MAAM,SACNC,aAAa,GACbZ,UAAU,YACVa,SAAU,SAACC,GAAD,OAAO3B,EAAc2B,EAAEC,OAAOC,QACxCC,WAAW,sBACXb,QAAQ,WAPV,UASE,cAACgB,EAAA,EAAD,CAAUJ,MAAM,OAAhB,kBACA,cAACI,EAAA,EAAD,CAAUJ,MAAM,SAAhB,oBACA,cAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,qBAGF,cAACP,EAAA,EAAD,CACEY,GAAG,iBACHV,MAAM,iCACNP,QAAQ,WACRmB,KAAK,SACLD,KAAK,SACLtB,UAAU,YACVa,SAAU,SAACC,GAAD,OAAOzB,EAAOyB,EAAEC,OAAOC,UAEnC,cAACQ,EAAA,EAAD,CACEpB,QAAQ,YACRJ,UAAU,gBACVF,MAAO,CAAE2B,SAAU,OAAQ1B,UAAW,QACtCQ,MAAM,UACNmB,QAzEY,WACpB,GACEC,SAASvC,GAAO,IAChBuC,SAASvC,GAAO,GACR,KAARJ,GACe,KAAfE,EAEA0C,MAAM,mCACD,CACL,IAAMC,EAAG,aAAS7C,EAAT,YAAgBE,EAAhB,YAA8BE,GACvCR,EAAQkD,KAAKD,KA0DT,6B,QCIKE,EA/FI,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,MAC7C,EAA0BrD,mBAAS,GAAnC,mBAAOsD,EAAP,KAAcC,EAAd,KAWA,OATAxC,qBAAU,WACJoC,EAAUK,OAAS,GACrBD,EACsE,GAApEJ,EAAUM,QAAO,SAACC,GAAD,OAAOA,EAAEC,aAAeD,EAAEE,kBAAgBJ,UAI9D,IAGD,gCACE,eAACxC,EAAA,EAAD,CACEC,MAAO,CAAEC,UAAW,OAAQO,gBAAiB,sBAD/C,UAGE,cAACL,EAAA,EAAD,CACEC,MAAM,YACNC,qBAAsB,CAAEC,QAAS,MACjCN,MAAO,CACLO,UAAW,SACXC,gBAAiB,oBACjBC,MAAO,WAGX,eAACC,EAAA,EAAD,WACE,oBACEV,MAAO,CACLO,UAAW,SACXoB,SAAU,UACViB,WAAY,QAJhB,yBAOkC,GAAnBV,EAAUK,UAEzB,oBACEvC,MAAO,CACLO,UAAW,SACXoB,SAAU,UACViB,WAAY,QAJhB,0BAOgBP,WAKnBH,EAAUd,KAAI,SAACqB,EAAGI,GACjB,OACE,eAAC9C,EAAA,EAAD,CAAcC,MAAO,CAAEC,UAAW,QAAlC,UACE,qBAAKC,UAAU,WAAf,SACE,mBACEA,UAAU,eACV4C,wBAAyBX,EAAaM,EAAEM,cAG5C,uBACA,eAACrC,EAAA,EAAD,WACE,sBAAKV,MAAO,CAAEO,UAAW,UAAYL,UAAU,UAA/C,UACE,8CAAqB,IACrB,mBACE4C,wBAAyBX,EAAaM,EAAEC,YACxCxC,UACEuC,EAAEC,aAAeD,EAAEE,eAAiB,UAAY,UAGpD,uBACA,kDACA,mBACEG,wBAAyBX,EAAaM,EAAEE,gBACxCzC,UAAU,eAGd,mBAAGF,MAAO,CAAEgD,MAAO,QAASvC,MAAO,QAAnC,SACE,wCAAWgC,EAAEC,aAAeD,EAAEE,eAAiB,KAAO,KAAtD,cAzBKE,MA+Bf,8BACE,cAACnB,EAAA,EAAD,CACEpB,QAAQ,YACRsB,QAASQ,EACTpC,MAAO,CAAEC,UAAW,OAAQgD,aAAc,OAAQC,MAAO,QACzDzC,MAAM,UAJR,yBCrFO,MAA0B,mCCwJ1B0C,EAjJG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOtE,EAAc,EAAdA,QAC1B,EAA8BC,oBAAS,GAAvC,mBAAOsE,EAAP,KAAgBC,EAAhB,KACA,EAAgCvE,mBAAS,IAAzC,mBAAOwE,EAAP,KAAiBC,EAAjB,KACA,EAAkCzE,mBAAS,IAA3C,mBAAOmD,EAAP,KAAkBuB,EAAlB,KACA,EAA0C1E,mBAAS,GAAnD,mBAAO2E,EAAP,KAAsBC,EAAtB,KACA,EAAoC5E,mBAAS,IAA7C,mBAAO6E,EAAP,KAAmBC,EAAnB,KACA,EAA4B9E,oBAAS,GAArC,mBAAO+E,EAAP,KAAeC,EAAf,KAEM5B,EAAe,SAAC6B,GACpB,MAAO,CAAEC,OAAQD,IAGbE,EAAa,uCAAG,gCAAAzE,EAAA,6DACpB6D,GAAW,GADS,SAGZvB,EAHY,6CAIhBqB,EAAMe,OAAOC,GAJG,qBAMhBhB,EAAMe,OAAOjF,IANG,uBAOHkE,EAAMe,OAAOE,IAAIC,cAPd,2BAQK5E,IAAMC,IAAIoC,GARf,gBAQVnC,EARU,EAQVA,KAER6D,EAAa7D,EAAK2E,SAClBV,EACE,sBACKjE,EAAK2E,QAAQ,GAAGC,mBADrB,CAEE5E,EAAK2E,QAAQ,GAAG5B,iBAChB8B,MAAK,kBAAMC,KAAKC,SAAW,OAfb,kDAkBlBC,QAAQC,IAAI,6BAAZ,MAlBkB,QAoBpBvB,GAAW,GApBS,0DAAH,qDAuBnBxD,qBAAU,WACRoE,MAEC,IAEH,IAwBM9B,EAAQ,WACZtD,EAAQkD,KAAK,MAQf,OACE,mCACGqB,EACC,qBAAKnD,UAAU,SAAf,SACE,qBAAK4E,IAAKC,EAAQC,IAAI,iBAErBlB,EAwDH,cAAC,EAAD,CACE5B,UAAWA,EACXC,aAAcA,EACdC,MAAOA,IA1DT,8BACGF,EAAUK,OAAS,GAClB,mCACE,eAACxC,EAAA,EAAD,CAAMG,UAAU,kBAAhB,UACE,qBAAKA,UAAU,WAAf,SACE,mBACE4C,wBAAyBX,EACvBD,EAAUwB,GAAeX,UAE3B7C,UAAU,mBAGd,uBACA,eAACQ,EAAA,EAAD,WACGkD,EAAWxC,KAAI,SAAC6D,EAAKpC,GACpB,OACE,qBACE3C,UACEqD,IAAa0B,EAAM,kBAAoB,SAGzCrD,QAAS,SAACZ,IAjCd,SAACA,EAAGiE,GACpB/C,EAAUwB,GAAehB,WAAauC,EACtCzB,EAAYyB,GAgCUC,CAAUlE,EAAGiE,IANjB,SASE,mBAAGnC,wBAAyBX,EAAa8C,MALpCpC,MAUX,gCACE,cAACnB,EAAA,EAAD,CACEpB,QAAQ,WACRG,MAAM,YACNT,MAAO,CAAEgD,MAAO,SAChBpB,QACEM,EAAUK,SAAWmB,EAAgB,EA7DxC,WACjB,IAAKxB,EAAUwB,GAAehB,WAE5B,OADAZ,MAAM,+BACC,EAGTiC,GAAU,IArBS,WACnB,IAAK7B,EAAUwB,GAAehB,WAE5B,OADAZ,MAAM,+BACC,EAGT+B,EACE,sBACK3B,EAAUwB,EAAgB,GAAGc,mBADlC,CAEEtC,EAAUwB,EAAgB,GAAGf,iBAC7B8B,MAAK,kBAAMC,KAAKC,SAAW,OAG/BhB,EAAiBD,EAAgB,IA0DjB,SAUGxB,EAAUK,SAAWmB,EAAgB,EAClC,cACA,kBAEN,cAAChC,EAAA,EAAD,CAAQpB,QAAQ,WAAWsB,QAASQ,EAApC,mCChHL+C,MAbf,WACE,OACE,mCACE,cAACC,EAAA,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWzG,EAAkB0G,OAAK,IAClD,cAAC,IAAD,CAAOF,KAAK,mBAAmBC,UAAWnC,EAAWoC,OAAK,YCDrDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDZ,K","file":"static/js/main.3ff60e7a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  MenuItem,\n  TextField,\n  Button,\n} from '@material-ui/core';\nimport axios from 'axios';\n\nconst QuestionCategory = ({ history }) => {\n  const [cats, setCats] = useState([]);\n  const [cat, setCat] = useState('');\n  const [difficulty, setDifficulty] = useState('');\n  const [qNo, setQNo] = useState(0);\n\n  const fetchQuestionCategories = async () => {\n    const { data } = await axios.get(`https://opentdb.com/api_category.php`);\n\n    setCats(data.trivia_categories);\n  };\n  useEffect(() => {\n    fetchQuestionCategories();\n  }, []);\n\n  const submitHandler = () => {\n    if (\n      parseInt(qNo) > 15 ||\n      parseInt(qNo) < 1 ||\n      cat === '' ||\n      difficulty === ''\n    ) {\n      alert(' Please give proper input !');\n    } else {\n      const url = `/q/${cat}/${difficulty}/${qNo}`;\n      history.push(url);\n    }\n  };\n\n  return (\n    <div>\n      <Card style={{ marginTop: '50px' }} className='card'>\n        <CardHeader\n          title='Geekster Quiz Competition'\n          titleTypographyProps={{ variant: 'h3' }}\n          style={{\n            textAlign: 'center',\n            backgroundColor: 'black',\n            color: 'pink',\n          }}\n        ></CardHeader>\n        <CardContent>\n          <TextField\n            select\n            label='Select'\n            defaultValue=''\n            onChange={(e) => setCat(e.target.value)}\n            helperText='Please select category'\n            className='inputText'\n            variant='outlined'\n          >\n            {cats.map((c) => {\n              return (\n                <MenuItem key={c.id} value={c.id}>\n                  {c.name}\n                </MenuItem>\n              );\n            })}\n          </TextField>\n\n          <TextField\n            select\n            label='Select'\n            defaultValue=''\n            className='inputText'\n            onChange={(e) => setDifficulty(e.target.value)}\n            helperText='Please select level'\n            variant='outlined'\n          >\n            <MenuItem value='easy'>Easy</MenuItem>\n            <MenuItem value='medium'>Medium</MenuItem>\n            <MenuItem value='hard'>Hard</MenuItem>\n          </TextField>\n\n          <TextField\n            id='outlined-basic'\n            label='Number Of Questions ( 1 - 15 )'\n            variant='outlined'\n            type='number'\n            name='number'\n            className='inputText'\n            onChange={(e) => setQNo(e.target.value)}\n          />\n          <Button\n            variant='contained'\n            className='button-submit'\n            style={{ fontSize: '25px', marginTop: '20px' }}\n            color='primary'\n            onClick={submitHandler}\n          >\n            Submit\n          </Button>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default QuestionCategory;\n","import { Button, Card, CardContent, CardHeader } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\n\nconst ShowResult = ({ questions, createMarkup, reset }) => {\n  const [score, setScore] = useState(0);\n\n  useEffect(() => {\n    if (questions.length > 0) {\n      setScore(\n        questions.filter((q) => q.userAnswer === q.correct_answer).length * 10\n      );\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div>\n      <Card\n        style={{ marginTop: '50px', backgroundColor: 'rgb(186, 233, 233)' }}\n      >\n        <CardHeader\n          title='Marksheet'\n          titleTypographyProps={{ variant: 'h3' }}\n          style={{\n            textAlign: 'center',\n            backgroundColor: 'rgb(73, 189, 235)',\n            color: 'white',\n          }}\n        ></CardHeader>\n        <CardContent>\n          <p\n            style={{\n              textAlign: 'center',\n              fontSize: '1.59rem',\n              fontWeight: 'bold',\n            }}\n          >\n            Full Score: {questions.length * 10}\n          </p>\n          <p\n            style={{\n              textAlign: 'center',\n              fontSize: '1.59rem',\n              fontWeight: 'bold',\n            }}\n          >\n            Total Score: {score}\n          </p>\n        </CardContent>\n      </Card>\n\n      {questions.map((q, i) => {\n        return (\n          <Card key={i} style={{ marginTop: '15px' }}>\n            <div className='question'>\n              <p\n                className='questionText'\n                dangerouslySetInnerHTML={createMarkup(q.question)}\n              ></p>\n            </div>\n            <hr />\n            <CardContent>\n              <div style={{ textAlign: 'center' }} className='answerq'>\n                <b>Your Answer: </b>{' '}\n                <p\n                  dangerouslySetInnerHTML={createMarkup(q.userAnswer)}\n                  className={\n                    q.userAnswer === q.correct_answer ? 'correct' : 'wrong'\n                  }\n                ></p>\n                <hr />\n                <b>Correct Answer : </b>\n                <p\n                  dangerouslySetInnerHTML={createMarkup(q.correct_answer)}\n                  className='correct'\n                ></p>\n              </div>\n              <p style={{ float: 'right', color: 'blue' }}>\n                <b>Mark : {q.userAnswer === q.correct_answer ? '10' : '00'} </b>\n              </p>\n            </CardContent>\n          </Card>\n        );\n      })}\n      <div>\n        <Button\n          variant='contained'\n          onClick={reset}\n          style={{ marginTop: '35px', marginBottom: '15px', width: '100%' }}\n          color='primary'\n        >\n          Reset\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ShowResult;\n","export default __webpack_public_path__ + \"static/media/loader.62654f80.svg\";","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport ShowResult from '../components/ShowResult';\nimport Loader from '../img/loader.svg';\nimport { Button, Card, CardContent } from '@material-ui/core';\n\nconst Questions = ({ match, history }) => {\n  const [loading, setLoading] = useState(false);\n  const [selected, setSelected] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [curQuestionNo, setCurQuestionNo] = useState(0);\n  const [allAnswers, setAllAnswers] = useState([]);\n  const [result, setResult] = useState(false);\n\n  const createMarkup = (text) => {\n    return { __html: text };\n  };\n\n  const fetchQuizData = async () => {\n    setLoading(true);\n    try {\n      const url = `https://opentdb.com/api.php?amount=${\n        match.params.no\n      }&category=${\n        match.params.cat\n      }&difficulty=${match.params.dif.toLowerCase()}&type=multiple`;\n      const { data } = await axios.get(url);\n\n      setQuestions(data.results);\n      setAllAnswers(\n        [\n          ...data.results[0].incorrect_answers,\n          data.results[0].correct_answer,\n        ].sort(() => Math.random() - 0.5)\n      );\n    } catch (error) {\n      console.log('Fetch quiz error =====>>>>', error);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchQuizData();\n    // eslint-disable-next-line\n  }, []);\n\n  const nextQuestion = () => {\n    if (!questions[curQuestionNo].userAnswer) {\n      alert('Please select one answer !');\n      return false;\n    }\n\n    setAllAnswers(\n      [\n        ...questions[curQuestionNo + 1].incorrect_answers,\n        questions[curQuestionNo + 1].correct_answer,\n      ].sort(() => Math.random() - 0.5)\n    );\n\n    setCurQuestionNo(curQuestionNo + 1);\n  };\n  const showResult = () => {\n    if (!questions[curQuestionNo].userAnswer) {\n      alert('Please select one answer !');\n      return false;\n    }\n\n    setResult(true);\n  };\n\n  const reset = () => {\n    history.push('/');\n  };\n\n  const getAnswer = (e, ans) => {\n    questions[curQuestionNo].userAnswer = ans;\n    setSelected(ans);\n  };\n\n  return (\n    <>\n      {loading ? (\n        <div className='loader'>\n          <img src={Loader} alt='Loading...' />\n        </div>\n      ) : !result ? (\n        <div>\n          {questions.length > 0 && (\n            <>\n              <Card className='questionContent'>\n                <div className='question'>\n                  <p\n                    dangerouslySetInnerHTML={createMarkup(\n                      questions[curQuestionNo].question\n                    )}\n                    className='questionText'\n                  ></p>\n                </div>\n                <hr />\n                <CardContent>\n                  {allAnswers.map((ans, i) => {\n                    return (\n                      <div\n                        className={\n                          selected === ans ? 'selected answer' : 'answer'\n                        }\n                        key={i}\n                        onClick={(e) => {\n                          getAnswer(e, ans);\n                        }}\n                      >\n                        <p dangerouslySetInnerHTML={createMarkup(ans)}></p>\n                      </div>\n                    );\n                  })}\n\n                  <div>\n                    <Button\n                      variant='outlined'\n                      color='secondary'\n                      style={{ float: 'right' }}\n                      onClick={\n                        questions.length === curQuestionNo + 1\n                          ? showResult\n                          : nextQuestion\n                      }\n                    >\n                      {questions.length === curQuestionNo + 1\n                        ? 'Show Result'\n                        : 'Next Question'}\n                    </Button>\n                    <Button variant='outlined' onClick={reset}>\n                      Reset\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            </>\n          )}\n        </div>\n      ) : (\n        <ShowResult\n          questions={questions}\n          createMarkup={createMarkup}\n          reset={reset}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Questions;\n","\nimport { Container } from '@material-ui/core';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport QuestionCategory from './pages/QuestionCategory';\nimport Questions from './pages/Questions';\n\nfunction App() {\n  return (\n    <>\n      <Container>\n        <Router>\n          <Route path='/' component={QuestionCategory} exact></Route>\n          <Route path='/q/:cat/:dif/:no' component={Questions} exact></Route>\n        </Router>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}